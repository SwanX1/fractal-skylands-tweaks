buildscript {
  repositories {
    maven { url = 'https://maven.minecraftforge.net' }
    maven { url = 'https://repo.spongepowered.org/maven' }
    mavenCentral()
  }

  dependencies {
    classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
  }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'org.spongepowered.mixin'

// This initializes the config. Please try to modify the variables in the config file, if needed, add more if you see a reason to.
ext.config = parseConfig(file('build.properties'))

version = config.VERSION
group = "${config.GROUP}.${config.ARTIFACT}"
archivesBaseName = "${config.ARCHIVES_BASE_NAME}-${config.MINECRAFT_VERSION}"

compileJava.options.encoding = "UTF-8"
java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
  mappings channel: config.MAPPINGS_CHANNEL, version: config.MAPPINGS_VERSION

  // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

  runs {
    client {
      workingDirectory project.file('run')
      arg "-mixin.config=${config.ARTIFACT}.mixins.json"
      property 'forge.logging.markers', 'REGISTRIES'
      property 'forge.logging.console.level', 'debug'
      mods {
        fractalskylandstweaks {
          source sourceSets.main
        }
      }
    }

    server {
      workingDirectory project.file('run')
      arg "-mixin.config=${config.ARTIFACT}.mixins.json"
      property 'forge.logging.markers', 'REGISTRIES'
      property 'forge.logging.console.level', 'debug'
      mods {
        fractalskylandstweaks {
          source sourceSets.main
        }
      }
    }

    data {
      workingDirectory project.file('run')
      property 'forge.logging.markers', 'REGISTRIES'
      property 'forge.logging.console.level', 'debug'
      args '--mod', config.MOD_ID, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
      mods {
        fractalskylandstweaks {
          source sourceSets.main
        }
      }
    }
  }
}

// sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
  maven {
    url "https://www.cursemaven.com"
    content {
      includeGroup "curse.maven"
    }
  }
}

dependencies {
  minecraft "net.minecraftforge:forge:${config.MINECRAFT_VERSION}-${config.FORGE_VERSION}"
  implementation fg.deobf("curse.maven:create-328085:${config.CREATE_FILE}")
  implementation fg.deobf("curse.maven:farmersdelight-398521:${config.FARMERS_DELIGHT_FILE}")
  implementation fg.deobf("curse.maven:flywheel-486392:${config.FLYWHEEL_FILE}")
  implementation fg.deobf("curse.maven:mutil-351914:${config.MUTIL_FILE}")
  implementation fg.deobf("curse.maven:tetra-289712:${config.TETRA_FILE}")
  implementation "com.google.code.gson:gson:2.8.0" // Minecraft already has this, but I'm declaring it just to declare that this project uses it.
  annotationProcessor "org.spongepowered:mixin:${config.MIXIN_VERSION}:processor"
}

jar {
  manifest {
    attributes([
      'Specification-Title'   : config.TITLE,
      'Specification-Vendor'  : config.AUTHOR,
      'Specification-Version' : '1',
      'Implementation-Title'  : config.TITLE,
      'Implementation-Version': config.VERSION,
      'Implementation-Vendor' : config.AUTHOR,
      'MixinConfigs'          : "${config.ARTIFACT}.mixins.json",
    ])
  }
}

jar.finalizedBy('reobfJar')

mixin {
  add sourceSets.main, "${config.ARTIFACT}.refmap.json"
}

// Config parse function
def parseConfig(File config) {
  config.withReader {
    def prop = new Properties()
    prop.load(it)
    return new ConfigSlurper().parse(prop)
  }
}
